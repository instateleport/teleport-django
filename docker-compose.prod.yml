version: '3.4'

services:
  web:
    build:
      context: .
      network: host
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - ./teleport/:/code
      - ./media/:/media
    command:
      sh -c "python3 manage.py wait_for_db &&
             gunicorn -b 0.0.0.0:8001 -w 3 getsub.wsgi:application"
    env_file:
      - ./teleport/.env.prod
    depends_on:
      - db
      - redis
  
  db:
    image: postgres:12
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    env_file:
      - ./teleport/.env.prod

  redis:
    image: redis

  celery:
    restart: always
    build:
      context: .
      network: host
    command: celery -A getsub worker -l info -f celery.log
    volumes:
      - ./teleport:/code/
    env_file:
      - ./teleport/.env.prod
    depends_on:
      - db
      - redis
      - web

  celery-beat:
    restart: always
    build:
      context: .
      network: host
    command: celery -A getsub beat -l info -f celery_beat.log
    volumes:
      - ./teleport:/code/
    env_file:
      - ./teleport/.env.prod
    depends_on:
      - db
      - redis
      - web

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    ports:
      - "8080:8080"
    

volumes:
  postgres_data: